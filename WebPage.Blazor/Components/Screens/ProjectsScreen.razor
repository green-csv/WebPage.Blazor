@using WebPage.Blazor.Src.Services.Projects
@using WebPage.Blazor.Src.UI.ViewModels.Projects
@using Microsoft.AspNetCore.Components.Web
@inject IProjectService ProjectService

<PageTitle>Projects</PageTitle>
@{
  <div class="flex flex-col gap-4 md:px-8 px-2 pt-4">
  @for (var i = 0; i < _projects.Count; i++)
  {
    var project = _projects[i];

    <div
      class="group flex flex-col sm:flex-row gap-4 p-4 hover:bg-gray-900
            hover:text-shadow-terminal-teal transition-all duration-200
            @(i == _projects.Count -1 ? "": "border-b border-teal-300")">

        <div
          class="flex justify-end sm:items-center sm:justify-center sm:w-48 sm:h-32 w-full h-24 rounded-sm overflow-hidden">
          <img src="@project.ImagePath"
               alt="Preview"
               class="border w-auto h-full object-cover opacity-70 p-1
                group-hover:bg-cyan-900
              filter grayscale brightness-75
              group-hover:filter-none group-hover:brightness-100 group-hover:opacity-100
              transition-all duration-500 ease-in-out"/>
        </div>

        <div class="flex flex-1 flex-col relative">
          <!-- text, metadata, links, tags -->
          <h2 class="uppercase font-bold shadow-none">>_ @project.Id</h2>

          <div class="pt-1 font-semibold shadow-none">@project.Name</div>
          <div>@project.Description</div>

          <div class="pt-2 text-teal-300">
            Created: @project.CreatedAt.ToShortDateString()
            | Status: @project.Status
          </div>

          <!-- Tags -->
          <div class="pt-1 flex flex-wrap gap-2">
            @foreach (var tag in project.Tags)
            {
              <div class="px-2 py-0.5 bg-teal-800/40 text-teal-200 rounded-sm tracking-wider">
                [ @tag ]
              </div>
            }
          </div>

          <!-- 🔗 Flexible marketplace/web links -->
          <div class="pt-3 flex flex-wrap gap-4">
            @foreach (var link in project.Links)
            {
              <a href="@link.Url"
                 target="_blank"
                 class="flex bg-sky-100 text-teal-800 px-3 py-1 rounded-sm hover:bg-indigo-500 hover:text-sky-100 transition-colors duration-200 items-center gap-2">
                <span class="flex items-center gap-1">
                  [@IconFactory.GetIcon(link.Icon)]
                </span>
                @link.Label
              </a>
            }
          </div>

        </div>
      </div>
    }
  </div>}

@code {
  private List<ProjectViewModel> _projects = [];

  protected override async Task OnInitializedAsync()
  {
    _projects = await ProjectService.GetProjectsAsync();
  }
}
