@inherits WebPage.Blazor.Src.Infrastructure.Interop.BootInteropLayoutBase
@inject Src.Services.Metadata.IMetadataService MetaSvc

<HeadContent>
  @if (_meta is not null)
  {
    <meta name="description" content="@_meta.Description"/>
    <meta name="author" content="@_meta.Author.Name"/>
    <meta name="copyright" content="@_meta.License.Type"/>
    <meta name="generator" content="Pages.Entries @_meta.Generated"/>

    <!-- Open-Graph baseline for the blog section -->
    <meta property="og:site_name" content="@_meta.Repo.Name"/>
    <meta property="og:type" content="website"/>
    <meta property="og:description" content="@_meta.Description"/>
    <meta property="og:url" content="@_meta.Repo.Url"/>
  }
</HeadContent>

<svg class="hidden">
  <filter id="grainy">
    <feTurbulence
      type="fractalNoise"
      baseFrequency="0.2"
      numOctaves="2"
      result="noise">
      <animate
        attributeName="baseFrequency"
        values="0.5;0.65;0.62;0.63;0.5"
        dur="0.2s"
        repeatCount="indefinite"/>
    </feTurbulence>

    <feColorMatrix
      in="noise"
      type="matrix"
      values="1 0 0 0 0
              0 1 0 0 0
              0 0 1 0 0
              0 0 0 0.1 0"
      result="lowOpacityNoise"/>

    <feBlend
      in="SourceGraphic"
      in2="lowOpacityNoise"
      mode="screen"/>
  </filter>

  <!-- Chromatic Aberration Filter -->
  <filter id="chromatic-aberration">
    <feOffset in="SourceGraphic" dx="-1" dy="0" result="redShift"/>
    <feComponentTransfer in="redShift" result="redOnly">
      <feFuncR type="identity"/>
      <feFuncG type="discrete" tableValues="0"/>
      <feFuncB type="discrete" tableValues="0"/>
    </feComponentTransfer>

    <feOffset in="SourceGraphic" dx="1" dy="0" result="blueShift"/>
    <feComponentTransfer in="blueShift" result="blueOnly">
      <feFuncR type="discrete" tableValues="0"/>
      <feFuncG type="discrete" tableValues="0"/>
      <feFuncB type="identity"/>
    </feComponentTransfer>

    <feComponentTransfer in="SourceGraphic" result="greenOnly">
      <feFuncR type="discrete" tableValues="0"/>
      <feFuncG type="identity"/>
      <feFuncB type="discrete" tableValues="0"/>
    </feComponentTransfer>

    <feBlend in="redOnly" in2="greenOnly" mode="screen" result="rg"/>
    <feBlend in="rg" in2="blueOnly" mode="screen"/>
  </filter>

  <!-- Combined CRT Master Filter -->
  <filter id="crt-master-filter">
    <!-- Grain Generation -->
    <feTurbulence type="fractalNoise" baseFrequency="0.2" numOctaves="2" result="noise">
      <animate attributeName="baseFrequency" values="0.8;0.85;0.82;0.83;0.8" dur="0.2s" repeatCount="indefinite"/>
    </feTurbulence>
    <feColorMatrix
      in="noise"
      type="matrix"
      values="
                1 0 0 0 0
                0 1 0 0 0
                0 0 1 0 0
                0 0 0 0.2 0"
      result="grain"/>

    <!-- Chromatic Channels -->
    <feOffset in="SourceGraphic" dx="-1" dy="0" result="redShift"/>
    <feComponentTransfer in="redShift" result="redOnly">
      <feFuncR type="identity"/>
      <feFuncG type="discrete" tableValues="0"/>
      <feFuncB type="discrete" tableValues="0"/>
    </feComponentTransfer>

    <feOffset in="SourceGraphic" dx="1" dy="0" result="blueShift"/>
    <feComponentTransfer in="blueShift" result="blueOnly">
      <feFuncR type="discrete" tableValues="0"/>
      <feFuncG type="discrete" tableValues="0"/>
      <feFuncB type="identity"/>
    </feComponentTransfer>

    <feComponentTransfer in="SourceGraphic" result="greenOnly">
      <feFuncR type="discrete" tableValues="0"/>
      <feFuncG type="identity"/>
      <feFuncB type="discrete" tableValues="0"/>
    </feComponentTransfer>

    <!-- Blend Chromatic Channels -->
    <feBlend in="redOnly" in2="greenOnly" mode="screen" result="rg"/>
    <feBlend in="rg" in2="blueOnly" mode="screen" result="rgb"/>

    <!-- Combine with Grain -->
    <feBlend in="rgb" in2="grain" mode="screen"/>
  </filter>
</svg>

<div class="crt-effect overflow-y-auto">
  <!-- Header -->
  <Header></Header>

  <main class="flex grow flex-col">

    <ErrorBoundary Context="ex">
      <ChildContent>
        @Body
      </ChildContent>
      <ErrorContent>

        <!-- Bottom error UI -->
        <div id="blazor-error-ui" class="flex justify-center">

          <div class="absolute bottom-0 flex items-center text-white">
            <span class="text-5xl">[</span>
            <div class="py-6">
              @ex.Message
            </div>
            <span class="text-5xl">]</span>
          </div>

        </div>

      </ErrorContent>
    </ErrorBoundary>

  </main>

  <!-- Footer -->
  <Footer></Footer>
</div>


@code
{
  private Src.Domain.Metadata.VaultMetadata? _meta;

  protected override async Task OnInitializedAsync()
  {
    _meta = await MetaSvc.GetAsync();
  }
}
